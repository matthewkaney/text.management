import Control.Concurrent

import qualified Sound.Osc.Fd as HOSC hiding (time)

import Sound.Tidal.Context hiding (startStream, startTidal)

:{
highlightTarget :: Target
highlightTarget = Target {oName = "Text Management Highlights",
                          oAddress = "127.0.0.1",
                          oPort = editorPort,
                          oBusPort = Nothing,
                          oLatency = 0.02,
                          oWindow = Nothing,
                          oSchedule = Pre BundleStamp,
                          oHandshake = False
                         }
:}

:{
highlightShape :: OSC
highlightShape = OSCContext "/highlight"
:}

:{
watchClock :: Stream -> IO ThreadId
watchClock stream = forkIO checkClock
  where
    checkClock :: IO ()
    checkClock = do time <- streamGetnow stream
                    HOSC.sendMessage editorSocket (HOSC.Message "/now" [HOSC.Float $ realToFrac time])
                    threadDelay 100000
                    checkClock
:}

import qualified Sound.Tidal.Stream as Stream

:{
startStream :: Config -> [(Target, [OSC])] -> IO Stream
startStream config oscmap
  = Stream.startStream config (oscmap ++ [(highlightTarget, [highlightShape])])
:}

:{
startTidal :: Target -> Config -> IO Stream
startTidal t c = startStream c [(t, [superdirtShape])]
:}
